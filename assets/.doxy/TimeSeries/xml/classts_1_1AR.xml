<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classts_1_1AR" kind="class" language="C++" prot="public">
    <compoundname>ts::AR</compoundname>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>p</declname>
        <defname>p</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classts_1_1AR_1a8bea2cd1e8d01a1260e4149a516cf5ac" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ts::AR&lt; p &gt;::_weights[p]</definition>
        <argsstring>[p]</argsstring>
        <name>_weights</name>
        <qualifiedname>ts::AR::_weights</qualifiedname>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="208" column="20" bodyfile="src/TimeSeries.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="variable" id="classts_1_1AR_1a905c943303e8cc5e537b1dbdd2194d26" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ts::AR&lt; p &gt;::_constant</definition>
        <argsstring></argsstring>
        <name>_constant</name>
        <qualifiedname>ts::AR::_constant</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="209" column="20" bodyfile="src/TimeSeries.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classts_1_1AR_1a0e5a0cfe48ee993ea7ea85283d5075d5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ts::AR&lt; p &gt;::_data_buffer[p]</definition>
        <argsstring>[p]</argsstring>
        <name>_data_buffer</name>
        <qualifiedname>ts::AR::_data_buffer</qualifiedname>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="210" column="20" bodyfile="src/TimeSeries.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="variable" id="classts_1_1AR_1a9ab269eaf3a3306d31f4b77ce2b95fcf" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ts::AR&lt; p &gt;::_writing_index</definition>
        <argsstring></argsstring>
        <name>_writing_index</name>
        <qualifiedname>ts::AR::_writing_index</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="211" column="20" bodyfile="src/TimeSeries.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classts_1_1AR_1a9233ba84249d0dd4d69ffe4ab3185bbe" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ts::AR&lt; p &gt;::_length_index</definition>
        <argsstring></argsstring>
        <name>_length_index</name>
        <qualifiedname>ts::AR::_length_index</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="212" column="20" bodyfile="src/TimeSeries.h" bodystart="212" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classts_1_1AR_1a30b766866bff8060f1ce96eba63994fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ts::AR&lt; p &gt;::AR</definition>
        <argsstring>()=default</argsstring>
        <name>AR</name>
        <qualifiedname>ts::AR::AR</qualifiedname>
        <briefdescription>
<para>Default class constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="72" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classts_1_1AR_1a8a5a5c7f4f98a6ab31eda8df838dbb79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ts::AR&lt; p &gt;::AR</definition>
        <argsstring>(double(&amp;weights)[p], double constant=0.0)</argsstring>
        <name>AR</name>
        <qualifiedname>ts::AR::AR</qualifiedname>
        <param>
          <type>double(&amp;)</type>
          <declname>weights</declname>
          <array>[p]</array>
        </param>
        <param>
          <type>double</type>
          <declname>constant</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para>Class constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Array containing the model&apos;s weights. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">constant</parametername>
</parameternamelist>
<parameterdescription>
<para>The model&apos;s intercept value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="82" column="13" bodyfile="src/TimeSeries.h" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classts_1_1AR_1a15d8bd14f8b9c1a8a4f6b9142d747a4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double * ts::AR&lt; p &gt;::get_weights</definition>
        <argsstring>() const</argsstring>
        <name>get_weights</name>
        <qualifiedname>ts::AR::get_weights</qualifiedname>
        <briefdescription>
<para>Get the current weights. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Array of model weights. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="99" column="20" bodyfile="src/TimeSeries.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classts_1_1AR_1a77ec0c1b06c000d97507d2d71052d539" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ts::AR&lt; p &gt;::get_constant</definition>
        <argsstring>() const</argsstring>
        <name>get_constant</name>
        <qualifiedname>ts::AR::get_constant</qualifiedname>
        <briefdescription>
<para>Get the current intercept. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Model intercept. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="108" column="20" bodyfile="src/TimeSeries.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classts_1_1AR_1a1e92ad1cc2ea9054964235e887caa801" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ts::AR&lt; p &gt;::set_weights</definition>
        <argsstring>(double(&amp;weights)[p])</argsstring>
        <name>set_weights</name>
        <qualifiedname>ts::AR::set_weights</qualifiedname>
        <param>
          <type>double(&amp;)</type>
          <declname>weights</declname>
          <array>[p]</array>
        </param>
        <briefdescription>
<para>Set model weights. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of new weights. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="117" column="18" bodyfile="src/TimeSeries.h" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classts_1_1AR_1a29d11f583423c3aa5774bc015ac6557f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ts::AR&lt; p &gt;::set_constant</definition>
        <argsstring>(double constant)</argsstring>
        <name>set_constant</name>
        <qualifiedname>ts::AR::set_constant</qualifiedname>
        <param>
          <type>double</type>
          <declname>constant</declname>
        </param>
        <briefdescription>
<para>Set model intercept value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">constant</parametername>
</parameternamelist>
<parameterdescription>
<para>New intercept value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="135" column="18" bodyfile="src/TimeSeries.h" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classts_1_1AR_1a6635a2d5e4885853d2c232813a98afdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ts::AR&lt; p &gt;::forecast</definition>
        <argsstring>(double(&amp;data)[p], double *predictions, int horizon=1)</argsstring>
        <name>forecast</name>
        <qualifiedname>ts::AR::forecast</qualifiedname>
        <param>
          <type>double(&amp;)</type>
          <declname>data</declname>
          <array>[p]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>predictions</declname>
        </param>
        <param>
          <type>int</type>
          <declname>horizon</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Compute model forecasts. </para>
        </briefdescription>
        <detaileddescription>
<para>This method can be used to compute h step ahead forecasts, where h is the forecast horizon. Its time complexity is O(ph), where p is the order of the model and h is the forecast horizon.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. The most recent data point must come last, and the oldest one first. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">predictions</parametername>
</parameternamelist>
<parameterdescription>
<para>Model forecasts. The prediction that goes further into the future comes last. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">horizon</parametername>
</parameternamelist>
<parameterdescription>
<para>Forecast horizon. Optional parameter. Default=1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The length l of the predictions array must satisfy the following condition: l &gt;= horizon. If l &gt; horizon, the values in the first l positions of the array will be overwritten.</para>
</simplesect>
<simplesect kind="warning"><para>This method resets the predictions array before storing any prediction. This is to make sure that model predictions are not affected by a non-zero value in the array. Keep this in mind when supplying and retrieving a predictions array. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/TimeSeries.h" line="166" column="18" bodyfile="src/TimeSeries.h" bodystart="166" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>template. </para>
    </briefdescription>
    <detaileddescription>
<para>Template for generating <ref refid="classts_1_1AR" kindref="compound">AR</ref> model classes.</para>
<para>This class template implements the operations associated with an autoregressive (<ref refid="classts_1_1AR" kindref="compound">AR</ref>) model. These include setting the model&apos;s weights and constant and forecasting future values.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Order of the <ref refid="classts_1_1AR" kindref="compound">AR</ref> model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/TimeSeries.h" line="63" column="5" bodyfile="src/TimeSeries.h" bodystart="63" bodyend="214"/>
    <listofallmembers>
      <member refid="classts_1_1AR_1a905c943303e8cc5e537b1dbdd2194d26" prot="private" virt="non-virtual"><scope>ts::AR</scope><name>_constant</name></member>
      <member refid="classts_1_1AR_1a0e5a0cfe48ee993ea7ea85283d5075d5" prot="private" virt="non-virtual"><scope>ts::AR</scope><name>_data_buffer</name></member>
      <member refid="classts_1_1AR_1a9233ba84249d0dd4d69ffe4ab3185bbe" prot="private" virt="non-virtual"><scope>ts::AR</scope><name>_length_index</name></member>
      <member refid="classts_1_1AR_1a8bea2cd1e8d01a1260e4149a516cf5ac" prot="private" virt="non-virtual"><scope>ts::AR</scope><name>_weights</name></member>
      <member refid="classts_1_1AR_1a9ab269eaf3a3306d31f4b77ce2b95fcf" prot="private" virt="non-virtual"><scope>ts::AR</scope><name>_writing_index</name></member>
      <member refid="classts_1_1AR_1a30b766866bff8060f1ce96eba63994fc" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>AR</name></member>
      <member refid="classts_1_1AR_1a8a5a5c7f4f98a6ab31eda8df838dbb79" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>AR</name></member>
      <member refid="classts_1_1AR_1a6635a2d5e4885853d2c232813a98afdb" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>forecast</name></member>
      <member refid="classts_1_1AR_1a77ec0c1b06c000d97507d2d71052d539" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>get_constant</name></member>
      <member refid="classts_1_1AR_1a15d8bd14f8b9c1a8a4f6b9142d747a4b" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>get_weights</name></member>
      <member refid="classts_1_1AR_1a29d11f583423c3aa5774bc015ac6557f" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>set_constant</name></member>
      <member refid="classts_1_1AR_1a1e92ad1cc2ea9054964235e887caa801" prot="public" virt="non-virtual"><scope>ts::AR</scope><name>set_weights</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
